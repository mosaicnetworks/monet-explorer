{"version":3,"sources":["assets/monet.svg","components/Peers.tsx","components/Peer.tsx","monet.ts","components/Header.tsx","components/Wrapper.tsx","components/Block.tsx","components/Blocks.tsx","containers/Blocks.tsx","poa.ts","components/Nominees.tsx","components/Whitelist.tsx","containers/Network.tsx","containers/Search.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","keccak256","require","STable","styled","Table","Peers","props","poller","n","Monet","config","host","port","useState","peers","setPeers","fetchPeers","a","consensus","getPeers","p","console","log","useEffect","onPeersChangeHook","setInterval","then","clearInterval","selectedPeer","setSelectedPeer","show","setShow","onBlockClickBind","peer","e","Object","keys","length","size","centered","onHide","Header","closeButton","Title","Moniker","Body","id","bordered","responsive","striped","cellPadding","className","map","pubKeyBuffer","Buffer","from","PubKeyHex","slice","onClick","key","NetAddr","split","toString","Peer","info","setInfo","error","setError","fetchInfo","monet","getInfo","i","JSON","stringify","GAS","GASPRICE","SNavbar","Navbar","SNetwork","div","SNav","Nav","SSearch","stickyHeader","setStickyHeader","search","setSearch","window","addEventListener","scrollY","bg","expand","variant","sticky","undefined","Brand","href","width","src","Logo","Collapse","activeKey","Item","Link","eventKey","Control","type","placeholder","onChange","target","value","onKeyDown","ev","location","preventDefault","Toggle","aria-controls","Wrapper","Fragment","children","Block","block","Blocks","loadMore","setLoadMore","lastFetchedBlockIndex","setLastFetchedBlockIndex","blocks","setBlocks","fetchBlocks","l","parseInt","last_block_index","lastBlockIndexIncreaseHook","count","start","getBlocks","bks","reverse","table","document","getElementById","innerHeight","clientHeight","offsetTop","removeEventListener","fetchNewBlocks","nowLastBlockIndex","Number","lastBlockIndex","Index","newBlocks","all","selectedBlock","setSelectedBlock","bl","opacity","to","style","Transactions","Signatures","StateHash","PeersHash","RoundReceived","Badge","SBox","setLastBlockIndex","fluid","md","noGutters","POA","address","abi","contract","this","Contract","load","countTx","methods","getWhiteListCount","gas","gasPrice","callTx","countRes","toNumber","entries","Array","entry","moniker","addressTx","getWhiteListAddressFromIdx","monikerTx","getMoniker","hex","utils","hexToString","push","getNomineeCount","upVotes","downVotes","getNomineeAddressFromIdx","votesTx","getCurrentNomineeVotes","cleanAddress","votes","Nominees","nominees","setNominees","fetchNominees","getPOA","poaData","poa","parse","Whitelist","whitelist","setWhitelist","fetchWhitelist","wl","wle","SContent","SHeading","ps","SSuggestion","Search","data","match","params","account","setAccount","fetchDataResponses","getAccount","balance","format","nonce","bytecode","App","exact","path","component","Network","Boolean","hostname","app","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uHAAAA,EAAOC,QAAU,IAA0B,mC,kpBCc3C,IAAMC,EAAYC,EAAQ,KAAWD,UAE/BE,EAASC,YAAOC,IAAPD,CAAH,KAsIGE,IA1GgB,SAAAC,GAC9B,IAsBIC,EAtBEC,EAAI,IAAIC,QAAMC,IAAOC,KAAMD,IAAOE,MADD,EAGbC,mBAAwB,IAHX,mBAGhCC,EAHgC,KAGzBC,EAHyB,KAKjCC,EAAU,uCAAG,4BAAAC,EAAA,+EAEDT,EAAEU,UAAWC,WAFZ,OAEXC,EAFW,OAGjBL,EAASK,GAHQ,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAShBC,qBAAU,WACTP,MACE,IAEHO,qBAAU,WACTjB,EAAMkB,kBAAkBV,KACtB,CAACA,IAKJS,qBAAU,WAKT,OAJAhB,EAASkB,aAAY,WACpBT,IAAaU,MAAK,kBAAML,QAAQC,IAAI,gCAClC,KAEI,kBAAMK,cAAcpB,OA9BW,MAkCCM,mBACvC,IAnCsC,mBAkChCe,EAlCgC,KAkClBC,EAlCkB,OAqCfhB,oBAAS,GArCM,mBAqChCiB,EArCgC,KAqC1BC,EArC0B,KAwCjCC,EAAmB,SAACC,GAAD,OAAuB,SAACC,GAChDL,EAAgBI,GAFQF,GAAQ,KA6BjC,OACC,oCACEI,OAAOC,KAAKR,GAAcS,OAAS,GACnC,kBAAC,IAAD,CACCC,KAAM,KACNC,UAAU,EACVT,KAAMA,EACNU,OArCgB,kBAAMT,GAAQ,KAuC9B,kBAAC,IAAMU,OAAP,CAAcC,aAAa,GAC1B,kBAAC,IAAMC,MAAP,KAAcf,EAAagB,UAE5B,kBAAC,IAAMC,KAAP,KACC,kBAAC,IAAD,CAAMZ,KAAML,MAIf,kBAAC1B,EAAD,CACC4C,GAAG,cACHC,UAAU,EACVC,YAAY,EACZC,SAAS,EACTC,YAAa,OAEb,+BACC,4BACC,uCACA,oCACA,uCACA,wBAAIC,UAAU,0BAAd,gBAGF,+BAtDKrC,EAAMsC,KAAI,SAAAnB,GAEhB,IAAMoB,EAAeC,EAAOC,KAC3BtB,EAAKuB,UAAUC,MAAM,EAAGxB,EAAKuB,UAAUnB,QACvC,OAGD,OACC,wBAAIqB,QAAS1B,EAAiBC,GAAO0B,IAAK1B,EAAKW,SAC9C,4BAAKX,EAAKW,SACV,4BAAKX,EAAK2B,QAAQC,MAAM,KAAK,IAC7B,iCAEEP,EAAOC,KAAKvD,EAAUqD,GAAe,OACpCI,OAAO,IACPK,SAAS,QAEZ,wBAAIX,UAAU,0BAA0BlB,EAAKuB,qB,sHChEnCO,IAhCe,SAAAzD,GAAU,IAAD,EACdO,mBAAoB,IADN,mBAC/BmD,EAD+B,KACzBC,EADyB,OAEZpD,mBAAS,IAFG,mBAE/BqD,EAF+B,KAExBC,EAFwB,KAIhCC,EAAS,uCAAG,gCAAAnD,EAAA,6DACXN,EAAOL,EAAM2B,KAAK2B,QAAQC,MAAM,KAAK,GACrCQ,EAAQ,IAAI5D,QAAME,EAAM,MAFb,kBAKA0D,EAAMC,UALN,OAKVC,EALU,OAOhBN,EAAQM,GAPQ,gDAShBJ,EAAS,KAAEL,YATK,yDAAH,qDAiBf,OAJAvC,qBAAU,WACT6C,MACE,IAGF,oCACEF,GACA,6BACC,8BAAOM,KAAKC,UAAUT,EAAM,KAAM,Q,qJCnCvC,oJAmBatD,EAAS,CACrBC,KAAM,wBACNC,KAAM,MAGMyD,EAAQ,IAAI5D,QAAMC,EAAOC,KAAMD,EAAOE,MAEtC8D,EAAM,IACNC,EAAW,EAETN,O,kkCCnBf,IAAMO,EAAUzE,YAAO0E,IAAP1E,CAAH,KAIP2E,EAAW3E,IAAO4E,IAAV,KAMRC,EAAO7E,YAAO8E,IAAP9E,CAAH,KAWJ+E,EAAU/E,IAAO4E,IAAV,KA6FEtC,EAxEc,WAC5B,IADkC,EAEM5B,oBAAS,GAFf,mBAE3BsE,EAF2B,KAEbC,EAFa,OAINvE,mBAAS,IAJH,mBAI3BwE,EAJ2B,KAInBC,EAJmB,KAkBlC,OAZA/D,qBAAU,WACTgE,OAAOC,iBAAiB,UAAU,WAC7BD,OAAOE,QAPc,KAQxBL,GAAgB,GAGbG,OAAOE,SAXc,KAYxBL,GAAgB,SAMlB,oCACC,kBAACR,EAAD,CACCc,GAAI,OACJC,OAAO,KACPC,QAAQ,OACRzC,UAAU,0BACV0C,OAAQV,EAAe,WAAQW,GAE/B,kBAAC,IAAOC,MAAR,CAAcC,KAAK,KAClB,kBAAC,IAAD,CACCC,MAAO,IACPC,IAAKC,IACLhD,UAAU,iCAGZ,kBAAC,IAAOiD,SAAR,CAAiBtD,GAAG,oBACnB,kBAACkC,EAAD,CAAMqB,UAAU,KACf,kBAAC,IAAIC,KAAL,KACC,kBAAC,IAAIC,KAAL,CAAUP,KAAK,IAAIQ,SAAS,UAA5B,cAID,kBAAC,IAAIF,KAAL,KACC,kBAAC,IAAIC,KAAL,CAAUP,KAAK,WAAf,oBAMF,kBAACd,EAAD,CAAS/B,UAAU,uBAClB,kBAAC,IAAKsD,QAAN,CACCC,KAAK,OACLC,YAAY,SACZC,SAAU,SAAC1E,GAAD,OAAYoD,EAAUpD,EAAE2E,OAAOC,QACzCC,UAAW,SAACC,GACI,UAAXA,EAAGrD,MACN4B,OAAO0B,SAASjB,KAAO,WAAaX,EACpC2B,EAAGE,mBAGL/D,UAAU,cAIb,kBAAC2B,EAAD,KACC,uCAED,kBAAC,IAAOqC,OAAR,CAAeC,gBAAc,wBC1GlBC,EATe,SAAA/G,GAC7B,OACC,kBAAC,IAAMgH,SAAP,KACC,kBAAC,EAAD,MACChH,EAAMiH,W,iLCUKC,EAVgB,SAAAlH,GAC9B,OACC,oCACC,6BACC,8BAAOkE,KAAKC,UAAUnE,EAAMmH,MAAO,KAAM,O,weCG7C,IAAMvH,GAASC,YAAOC,IAAPD,CAAH,MAwNGuH,GA5LiB,SAAApH,GAC/B,IAmEIC,EAhEEC,EAAI,IAAIC,QAAMC,IAAOC,KAAMD,IAAOE,MAJA,EAMRC,oBAAS,GAND,mBAMjC8G,EANiC,KAMvBC,EANuB,OAQkB/G,mBAAS,GAR3B,mBAQjCgH,EARiC,KAQVC,EARU,OASZjH,mBAAyB,IATb,mBASjCkH,EATiC,KASzBC,EATyB,KAWlCC,EAAW,uCAAG,oCAAAhH,EAAA,0DACY,IAA3B4G,EADe,iEAMHrH,EAAE8D,UANC,cAMbC,EANa,OAOb2D,EAAIL,GAAyBM,SAAS5D,EAAE6D,iBAAkB,IAG3DP,GACJvH,EAAM+H,2BAA2BF,SAAS5D,EAAE6D,iBAAkB,KAI3DE,EAzBiB,GA0BjBC,EAAQL,EA1BS,GA4BjBA,EA5BiB,KA6BpBI,EAAQJ,EACRK,EAAQ,GApBU,UAuBD/H,EAAEU,UAAWsH,UAAUD,EAAOD,GAvB7B,QAuBbG,EAvBa,OA0BnBX,EAAyBS,IAAU,GACnCP,EAAU,GAAD,mBAAKD,GAAL,YAAgBU,EAAIC,aA3BV,4CAAH,qDA8BjBnH,qBAAU,WACT0G,IAEA,IAAMU,EAAQC,SAASC,eAAe,eAStC,OARAtD,OAAOC,iBAAiB,UAAU,WAEhCD,OAAOE,QAAUF,OAAOuD,aACxBH,EAAOI,aAAeJ,EAAOK,WAE7BpB,GAAY,MAGP,kBACNrC,OAAO0D,oBAAoB,UAAU,kBAGpC,IAEH1H,qBAAU,WACLoG,GACHM,IAGDL,GAAY,KACV,CAACD,IAKJ,IAAMuB,EAAc,uCAAG,oCAAAjI,EAAA,sEACHT,EAAE8D,UADC,UAChBN,EADgB,OAGhBmF,EAAoBC,OAAOpF,EAAKoE,kBAChCiB,EAAiBtB,EAAO,GAAGlF,KAAKyG,QAElCH,EAAoBE,GANF,wBAQrB/I,EAAM+H,2BAA2Bc,GARZ,SAUG3I,EAAEU,UAAWsH,UACpCa,EAAiB,EACjBF,EAAoBE,EAAiB,GAZjB,OAUfE,EAVe,OAefC,EAfe,sBAeLD,EAAUb,WAfL,YAemBX,IAExCC,EAAUwB,GAjBW,4CAAH,qDAqBpBjI,qBAAU,WAKT,OAJAhB,EAASkB,aAAY,WACpByH,IAAiBxH,MAAK,kBAAML,QAAQC,IAAI,gCACtC,KAEI,kBAAMK,cAAcpB,OAhGY,MAoGEM,mBACzC,IArGuC,mBAoGjC4I,EApGiC,KAoGlBC,EApGkB,OAuGhB7I,oBAAS,GAvGO,mBAuGjCiB,EAvGiC,KAuG3BC,EAvG2B,KA0GlCC,EAAmB,SAACyF,GAAD,OAAyB,SAACvF,GAClDwH,EAAiBjC,GAFO1F,GAAQ,KAMjC,OACC,oCACEI,OAAOC,KAAKqH,GAAepH,OAAS,GACpC,kBAAC,IAAD,CACCC,KAAM,KACNC,UAAU,EACVT,KAAMA,EACNU,OAdgB,kBAAMT,GAAQ,KAgB9B,kBAAC,IAAMU,OAAP,CAAcC,aAAa,GAC1B,kBAAC,IAAMC,MAAP,cACQ8G,EAAc5G,KAAKyG,QAG5B,kBAAC,IAAMzG,KAAP,KACC,kBAAC,EAAD,CAAO4E,MAAOgC,MAIjB,kBAACvJ,GAAD,CACC4C,GAAG,cACHC,UAAU,EACVC,YAAY,EACZC,SAAS,EACTC,YAAa,OAEb,+BACC,4BACC,iCACA,wCACA,yCACA,wBAAIC,UAAU,0BAAd,cACA,wBAAIA,UAAU,0BAAd,cACA,wBAAIA,UAAU,0BAAd,oBAKF,+BACE4E,EAAO3E,KAAI,SAAAuG,GACX,OACC,kBAAC,SAAD,CACCpG,KAAM,CAAEqG,QAAS,GACjBC,GAAI,CAAED,QAAS,GACfjG,IAAKgG,EAAG9G,KAAKyG,MAAQ,MAEpB,SAAAQ,GAAK,OACL,wBACCA,MAAOA,EACPpG,QAAS1B,EAAiB2H,GAC1BhG,IAAKgG,EAAG9G,KAAKyG,MAAQ,KAErB,4BAAKK,EAAG9G,KAAKyG,OACb,4BAAKK,EAAG9G,KAAKkH,aAAa1H,QAC1B,4BACEF,OAAOC,KAAKuH,EAAGK,YAAY3H,QAE7B,wBAAIc,UAAU,0BACZwG,EAAG9G,KAAKoH,WAEV,wBAAI9G,UAAU,0BACZwG,EAAG9G,KAAKqH,WAEV,wBAAI/G,UAAU,0BACZwG,EAAG9G,KAAKsH,0B,oPC5MLhK,YAAOiK,IAAPjK,CAAH,MAAZ,IAKMkK,GAAOlK,IAAO4E,IAAV,MA0CK2C,GArCc,WAAO,IAAD,EACU7G,mBAAS,GADnB,mBAC3BwI,EAD2B,KACXiB,EADW,KAGlC,OACC,oCACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAWC,OAAO,GACjB,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKC,GAAI,IACR,8CACA,iFAKD,kBAAC,IAAD,KACC,sCACA,4BAAKnB,GAAkB,WAK3B,kBAAC,IAAD,CAAKoB,WAAW,GACf,kBAAC,IAAD,KACC,kBAACJ,GAAD,KACC,kBAAC,IAAD,CAAWE,OAAO,GACjB,kBAAC,GAAD,CACClC,2BAA4BiC,U,wCCgHrBI,G,WAnHd,WAAYC,EAAiBC,GAAoB,0BAFhCC,cAE+B,EAC/CC,KAAKD,SAAWE,WAASC,KAAKJ,EAAKD,G,oMAI7BM,EAAUH,KAAKD,SAASK,QAAQC,kBAAkB,CACvDC,IAAK1G,IACL2G,SAAU1G,M,SAGiBN,IAAMiH,OAAOL,G,UAAnCM,E,OACAjD,EAAQiD,EAASC,W,yCAGf,I,OAGFC,EAA4B,G,MAElBC,MAAMnI,KAAKmI,MAAMpD,GAAOlG,Q,gDAA7BmC,E,KACJoH,EAAwB,CAC7BhB,QAAS,GACTiB,QAAS,IAGJC,EAAYf,KAAKD,SAASK,QAAQY,2BACvC,CACCV,IAAK1G,IACL2G,SAAU1G,KAEXJ,G,UAGqBF,IAAMiH,OAAOO,G,eAAnCF,EAAMhB,Q,OAEAoB,EAAYjB,KAAKD,SAASK,QAAQc,WACvC,CACCZ,IAAK1G,IACL2G,SAAU1G,KAEXgH,EAAMhB,S,UAGWtG,IAAMiH,OAAeS,G,QAAjCE,E,OACNN,EAAMC,QAAUM,KAAMC,YAAYF,GAElCR,EAAQW,KAAKT,G,4DAGPF,G,uRAIDR,EAAUH,KAAKD,SAASK,QAAQmB,gBAAgB,CACrDjB,IAAK1G,IACL2G,SAAU1G,M,SAGiBN,IAAMiH,OAAOL,G,UAAnCM,E,OACAjD,EAAQiD,EAASC,W,yCAGf,I,OAGFC,EAA0B,G,MAChBC,MAAMnI,KAAKmI,MAAMpD,GAAOlG,Q,gDAA7BmC,E,KACJoH,EAAsB,CAC3BhB,QAAS,GACTiB,QAAS,GACTU,QAAS,EACTC,UAAW,GAGNV,EAAYf,KAAKD,SAASK,QAAQsB,yBACvC,CACCpB,IAAK1G,IACL2G,SAAU1G,KAEXJ,G,UAGqBF,IAAMiH,OAAOO,G,eAAnCF,EAAMhB,Q,OAEAoB,EAAYjB,KAAKD,SAASK,QAAQc,WACvC,CACCZ,IAAK1G,IACL2G,SAAU1G,KAEXgH,EAAMhB,S,UAGWtG,IAAMiH,OAAeS,G,eAAjCE,E,OACNN,EAAMC,QAAUM,KAAMC,YAAYF,GAE5BQ,EAAU3B,KAAKD,SAASK,QAAQwB,uBACrC,CACCtB,IAAK1G,IACL2G,SAAU1G,KAEXuH,KAAMS,aAAahB,EAAMhB,U,UAGNtG,IAAMiH,OAAyBmB,G,QAA7CG,E,OAENjB,EAAMW,QAAUnE,SAASyE,EAAM,GAAI,IACnCjB,EAAMY,UAAYpE,SAASyE,EAAM,GAAI,IAErCnB,EAAQW,KAAKT,G,4DAGPF,G,sVCrJT,IAAMvL,GAASC,YAAOC,IAAPD,CAAH,MAwEG0M,GA7DgB,WAAO,IAiBjCtM,EAjBgC,EACJM,mBAAyB,IADrB,mBAC7BiM,EAD6B,KACnBC,EADmB,KAG9BC,EAAa,uCAAG,8BAAA/L,EAAA,sEACCoD,IAAM4I,SADP,cACfC,EADe,OAEfC,EAAM,IAAIzC,GAAIwC,EAAQvC,QAASnG,KAAK4I,MAAMF,EAAQtC,MAFnC,SAILuC,EAAIL,WAJC,cAMrBC,EAAYD,GANS,2CAAH,qDA0BnB,OAjBAvL,qBAAU,WACTyL,OAMDzL,qBAAU,WAOT,OANAhB,EAASkB,aAAY,WACpBuL,IAAgBtL,MAAK,kBACpBL,QAAQC,IAAI,mCAEX,KAEI,kBAAMK,cAAcpB,OAI3B,oCACC,kBAAC,GAAD,CACCuC,GAAG,cACHC,UAAU,EACVC,YAAY,EACZC,SAAS,EACTC,YAAa,OAEb,+BACC,4BACC,uCACA,uCACA,wCACA,4CAGF,+BACE4J,EAAS1J,KAAI,SAAA5C,GAAC,OACd,wBAAImD,IAAKnD,EAAEmK,SACV,4BAAKnK,EAAEoL,SACP,4BAAKpL,EAAEmK,SACP,4BAAKnK,EAAE8L,SACP,4BAAK9L,EAAE+L,mB,kPC/Dd,IAAMrM,GAASC,YAAOC,IAAPD,CAAH,MAoEGkN,GAzDiB,WAAO,IAiBlC9M,EAjBiC,EACHM,mBAA2B,IADxB,mBAC9ByM,EAD8B,KACnBC,EADmB,KAG/BC,EAAc,uCAAG,gCAAAvM,EAAA,sEACAoD,IAAM4I,SADN,cAChBC,EADgB,OAEhBC,EAAM,IAAIzC,GAAIwC,EAAQvC,QAASnG,KAAK4I,MAAMF,EAAQtC,MAFlC,SAILuC,EAAIG,YAJC,OAIhBG,EAJgB,OAMtBF,EAAaE,GANS,2CAAH,qDA0BpB,OAjBAlM,qBAAU,WACTiM,OAMDjM,qBAAU,WAOT,OANAhB,EAASkB,aAAY,WACpB+L,IAAiB9L,MAAK,kBACrBL,QAAQC,IAAI,oCAEX,KAEI,kBAAMK,cAAcpB,OAI3B,oCACC,kBAAC,GAAD,CACCuC,GAAG,cACHC,UAAU,EACVC,YAAY,EACZC,SAAS,EACTC,YAAa,OAEb,+BACC,4BACC,uCACA,yCAGF,+BACEoK,EAAUlK,KAAI,SAAAsK,GAAG,OACjB,wBAAI/J,IAAK+J,EAAI/C,SACZ,4BAAK+C,EAAI9B,SACT,4BAAK8B,EAAI/C,iB,mfCtDhB,IAAMgD,GAAWxN,IAAO4E,IAAV,MAIRsF,GAAOlK,IAAO4E,IAAV,MAIJ6I,GAAWzN,IAAO4E,IAAV,MAmECuE,GArDa,WAAO,IAAD,EACPzI,mBAAc,IADP,mBAC1BC,EAD0B,KACnBC,EADmB,KAOjC,OACC,oCACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAWwJ,OAAO,GACjB,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKC,GAAI,IACR,kDACA,gEAED,kBAAC,IAAD,KACC,qCACA,4BAAK1J,EAAMuB,QAAU,WAKzB,6BACA,kBAAC,IAAD,CAAWkI,OAAO,GACjB,kBAACqD,GAAD,mBACA,kBAAC,GAAD,KACC,kBAACvN,GAAA,EAAD,CAAOmB,kBAxBU,SAACqM,GACrB9M,EAAS8M,QA2BR,kBAACF,GAAD,KACC,kBAAC,IAAD,CAAWpD,OAAO,GACjB,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAACqD,GAAD,kBACA,kBAAC,GAAD,KACC,kBAAC,GAAD,QAGF,kBAAC,IAAD,KACC,kBAACA,GAAD,iBACA,kBAAC,GAAD,KACC,kBAAC,GAAD,a,2TClER,IAAM1I,GAAU/E,IAAO4E,IAAV,MAQP+I,GAAc3N,IAAO4E,IAAV,MA8EFgJ,GAlEiD,SAAAzN,GAC/D,IAAM0N,EAAO1N,EAAM2N,MAAMC,OAAOF,KADwC,EAG1CnN,mBAAsB,IAHoB,mBAGjEsN,EAHiE,KAGxDC,EAHwD,OAI9CvN,mBAAS,IAJqC,mBAIjEqD,EAJiE,KAI1DC,EAJ0D,KAMlEkK,EAAkB,uCAAG,iBAAApN,EAAA,SAAAA,EAAA,yDACc,KAApCiL,KAAMS,aAAaqB,GAAM3L,OADH,gCAETgC,IAAMiK,WAAWpC,KAAMS,aAAaqB,IAF3B,OAEnB/M,EAFmB,OAIzBmN,EAAWnN,GAJc,sBAMzBkD,EACC,wEAPwB,2CAAH,qDAgBxB,OAJA5C,qBAAU,WACT8M,MACE,IAGF,kBAAC,GAAD,KACC,kBAAC,IAAD,CAAW9D,OAAO,GACjB,uCACS,8BAAOjK,EAAM2N,MAAMC,OAAOF,QAGnC9J,GAAS,kBAAC4J,GAAD,KAAc5J,GACvB/B,OAAOC,KAAK+L,GAAS9L,OAAS,GAC9B,kBAACyL,GAAD,KACC,kBAAC,IAAD,CAAWvD,OAAO,GACjB,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,yCACA,4BACC,8BAAO4D,EAAQI,QAAQC,OAAO,SAIjC,6BACA,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,uCACA,4BACC,8BAAOL,EAAQM,UAIlB,6BACA,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,0CACA,6BACC,8BAAON,EAAQO,iBCnETC,GAZO,WACrB,OACC,kBAAC,IAAD,KACC,kBAAC,EAAD,KACC,kBAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,UAAWC,KACxC,kBAAC,IAAD,CAAOH,OAAO,EAAMC,KAAK,UAAUC,UAAWpH,KAC9C,kBAAC,IAAD,CAAOkH,OAAO,EAAMC,KAAK,gBAAgBC,UAAWf,QCJpCiB,QACU,cAA7BzJ,OAAO0B,SAASgI,UAEc,UAA7B1J,OAAO0B,SAASgI,UAEhB1J,OAAO0B,SAASgI,SAAShB,MACxB,2D,kBCRGiB,GAAM,kBAAC,GAAD,MAEZC,IAASC,OAAOF,GAAKtG,SAASC,eAAe,SD8HxC,kBAAmBwG,WACtBA,UAAUC,cAAcC,MAAM7N,MAAK,SAAA8N,GAClCA,EAAaC,kB","file":"static/js/main.941d0ca1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/monet.c256ca5b.svg\";","import React, { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport { IBabblePeer } from 'evm-lite-consensus';\nimport { Monet } from 'evm-lite-core';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Table from 'react-bootstrap/Table';\n\nimport Peer from '../components/Peer';\n\nimport { config } from '../monet';\n\nconst keccak256 = require('js-sha3').keccak256;\n\nconst STable = styled(Table)`\n\ttd {\n\t\tfont-family: 'Fira Code', monospace;\n\t\tfont-size: 14px;\n\t}\n\n\ttr {\n\t\ttransition: background 0.2s ease-in;\n\t}\n\n\ttbody tr:nth-of-type(odd) {\n\t\tbackground-color: rgba(0, 0, 0, 0.02);\n\t}\n\n\ttbody tr:nth-of-type(odd):hover {\n\t\tbackground: rgba(226, 110, 64, 0.1) !important;\n\t}\n\n\ttbody tr:hover {\n\t\tcursor: pointer;\n\t\tbackground: rgba(226, 110, 64, 0.1) !important;\n\t}\n`;\n\ntype Props = {\n\tonPeersChangeHook: (peers: IBabblePeer[]) => any;\n};\n\nconst Peers: React.FC<Props> = props => {\n\tconst n = new Monet(config.host, config.port);\n\n\tconst [peers, setPeers] = useState<IBabblePeer[]>([]);\n\n\tconst fetchPeers = async () => {\n\t\ttry {\n\t\t\tconst p = await n.consensus!.getPeers();\n\t\t\tsetPeers(p);\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tfetchPeers();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tprops.onPeersChangeHook(peers);\n\t}, [peers]);\n\n\t// Polling\n\tlet poller: any;\n\n\tuseEffect(() => {\n\t\tpoller = setInterval(() => {\n\t\t\tfetchPeers().then(() => console.log('(60s) Fetching Peers...'));\n\t\t}, 60000);\n\n\t\treturn () => clearInterval(poller);\n\t});\n\n\t// Selec Peer\n\tconst [selectedPeer, setSelectedPeer] = useState<IBabblePeer>(\n\t\t{} as IBabblePeer\n\t);\n\tconst [show, setShow] = useState(false);\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\tconst onBlockClickBind = (peer: IBabblePeer) => (e: any) => {\n\t\tsetSelectedPeer(peer);\n\t\thandleShow();\n\t};\n\n\tconst renderPeers = () => {\n\t\treturn peers.map(peer => {\n\t\t\t// we slice the first 4 characters as all eth public keys start with 0x04\n\t\t\tconst pubKeyBuffer = Buffer.from(\n\t\t\t\tpeer.PubKeyHex.slice(4, peer.PubKeyHex.length),\n\t\t\t\t'hex'\n\t\t\t);\n\n\t\t\treturn (\n\t\t\t\t<tr onClick={onBlockClickBind(peer)} key={peer.Moniker}>\n\t\t\t\t\t<td>{peer.Moniker}</td>\n\t\t\t\t\t<td>{peer.NetAddr.split(':')[0]}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t0x\n\t\t\t\t\t\t{Buffer.from(keccak256(pubKeyBuffer), 'hex')\n\t\t\t\t\t\t\t.slice(-20)\n\t\t\t\t\t\t\t.toString('hex')}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td className=\"d-none d-lg-table-cell\">{peer.PubKeyHex}</td>\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t};\n\treturn (\n\t\t<>\n\t\t\t{Object.keys(selectedPeer).length > 0 && (\n\t\t\t\t<Modal\n\t\t\t\t\tsize={'lg'}\n\t\t\t\t\tcentered={true}\n\t\t\t\t\tshow={show}\n\t\t\t\t\tonHide={handleClose}\n\t\t\t\t>\n\t\t\t\t\t<Modal.Header closeButton={true}>\n\t\t\t\t\t\t<Modal.Title>{selectedPeer.Moniker}</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t<Peer peer={selectedPeer} />\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t\t<STable\n\t\t\t\tid=\"blocksTable\"\n\t\t\t\tbordered={false}\n\t\t\t\tresponsive={true}\n\t\t\t\tstriped={true}\n\t\t\t\tcellPadding={'1px'}\n\t\t\t>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Moniker</th>\n\t\t\t\t\t\t<th>Host</th>\n\t\t\t\t\t\t<th>Address</th>\n\t\t\t\t\t\t<th className=\"d-none d-lg-table-cell\">Public Key</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>{renderPeers()}</tbody>\n\t\t\t</STable>\n\t\t</>\n\t);\n};\n\nexport default Peers;\n","import React, { useEffect, useState } from 'react';\n\nimport { IBabblePeer } from 'evm-lite-consensus';\nimport { Monet } from 'evm-lite-core';\n\nimport { MonetInfo } from '../monet';\n\ntype Props = {\n\tpeer: IBabblePeer;\n};\n\nconst Peer: React.FC<Props> = props => {\n\tconst [info, setInfo] = useState<MonetInfo>({} as MonetInfo);\n\tconst [error, setError] = useState('');\n\n\tconst fetchInfo = async () => {\n\t\tconst host = props.peer.NetAddr.split(':')[0];\n\t\tconst monet = new Monet(host, 8080);\n\n\t\ttry {\n\t\t\tconst i = await monet.getInfo<MonetInfo>();\n\n\t\t\tsetInfo(i);\n\t\t} catch (e) {\n\t\t\tsetError(e.toString());\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tfetchInfo();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{error || (\n\t\t\t\t<pre>\n\t\t\t\t\t<code>{JSON.stringify(info, null, 2)}</code>\n\t\t\t\t</pre>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Peer;\n","import { IBaseInfo } from 'evm-lite-client';\nimport { Monet } from 'evm-lite-core';\n\nexport type MonetInfo = IBaseInfo & {\n\tconsensus_events: string;\n\tconsensus_transactions: string;\n\tevents_per_second: string;\n\tid: string;\n\tlast_block_index: string;\n\tlast_consensus_round: string;\n\tmoniker: string;\n\tnum_peers: string;\n\tround_events: string;\n\trounds_per_second: string;\n\tstate: string;\n\tsync_rate: string;\n\ttransaction_pool: string;\n\tundetermined_events: string;\n};\n\nexport const config = {\n\thost: 'camille.monet.network',\n\tport: 8080\n};\n\nexport const monet = new Monet(config.host, config.port);\n\nexport const GAS = 100000000;\nexport const GASPRICE = 0;\n\nexport default monet;\n","import React, { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport Form from 'react-bootstrap/Form';\nimport Image from 'react-bootstrap/Image';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport Logo from '../assets/monet.svg';\n\nconst SNavbar = styled(Navbar)`\n\ttransition: background 0.3s cubic-bezier(1, 1, 1, 1);\n`;\n\nconst SNetwork = styled.div`\n\tcolor: white;\n\ttext-transform: uppercase;\n\tfont-size: 13px;\n`;\n\nconst SNav = styled(Nav)`\n\ta {\n\t\tcolor: #ddd !important;\n\t}\n\n\ta:hover {\n\t\tcolor: white !important;\n\t\ttext-decoration: none;\n\t}\n`;\n\nconst SSearch = styled.div`\n\tmargin-left: 20px;\n\n\t@media (max-width: 575px) {\n\t\tmargin-left: 0;\n\t\twidth: auto !important;\n\t\tmargin: 10px 0;\n\t}\n\n\t& input {\n\t\tfont-size: 14px;\n\t\tborder: none !important;\n\t\tcolor: #fff !important;\n\t\tbackground: rgba(60, 120, 208, 0.7) !important;\n\t}\n\n\t& input::placeholder {\n\t\tcolor: #fff;\n\t}\n`;\n\nconst Header: React.FC<{}> = () => {\n\tconst scrollToggleHeight = 300;\n\tconst [stickyHeader, setStickyHeader] = useState(false);\n\n\tconst [search, setSearch] = useState('');\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tif (window.scrollY > scrollToggleHeight) {\n\t\t\t\tsetStickyHeader(true);\n\t\t\t}\n\n\t\t\tif (window.scrollY <= scrollToggleHeight) {\n\t\t\t\tsetStickyHeader(false);\n\t\t\t}\n\t\t});\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<SNavbar\n\t\t\t\tbg={'dark'}\n\t\t\t\texpand=\"lg\"\n\t\t\t\tvariant=\"dark\"\n\t\t\t\tclassName=\"justify-content-between\"\n\t\t\t\tsticky={stickyHeader ? 'top' : undefined}\n\t\t\t>\n\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t<Image\n\t\t\t\t\t\twidth={150}\n\t\t\t\t\t\tsrc={Logo}\n\t\t\t\t\t\tclassName=\"d-inline-block align-middle\"\n\t\t\t\t\t/>\n\t\t\t\t</Navbar.Brand>\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t<SNav activeKey=\"/\">\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link href=\"/\" eventKey=\"link-2\">\n\t\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link href=\"/blocks\">Block Explorer</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t{/* <Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"link-2\">Addresses</Nav.Link>\n\t\t\t\t\t\t</Nav.Item> */}\n\t\t\t\t\t</SNav>\n\t\t\t\t\t<SSearch className=\"justify-content-end\">\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\t\tonChange={(e: any) => setSearch(e.target.value)}\n\t\t\t\t\t\t\tonKeyDown={(ev: any) => {\n\t\t\t\t\t\t\t\tif (ev.key === 'Enter') {\n\t\t\t\t\t\t\t\t\twindow.location.href = '/search/' + search;\n\t\t\t\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName=\"mr-sm-2\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</SSearch>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t\t<SNetwork>\n\t\t\t\t\t<b>Camille</b>\n\t\t\t\t</SNetwork>\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t</SNavbar>\n\t\t</>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\nimport Header from './Header';\n\nconst Wrapper: React.FC<{}> = props => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Header />\n\t\t\t{props.children}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Wrapper;\n","import React from 'react';\n\nimport { IBabbleBlock } from 'evm-lite-consensus';\n\ntype Props = {\n\tblock: IBabbleBlock;\n};\n\nconst Block: React.FC<Props> = props => {\n\treturn (\n\t\t<>\n\t\t\t<pre>\n\t\t\t\t<code>{JSON.stringify(props.block, null, 2)}</code>\n\t\t\t</pre>\n\t\t</>\n\t);\n};\n\nexport default Block;\n","import React, { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Table from 'react-bootstrap/Table';\n\nimport { IBabbleBlock } from 'evm-lite-consensus';\nimport { Monet } from 'evm-lite-core';\nimport { Spring } from 'react-spring/renderprops';\n\nimport { config, MonetInfo } from '../monet';\n\nimport Block from './Block';\n\nconst STable = styled(Table)`\n\ttd {\n\t\tfont-family: 'Fira Code', monospace;\n\t\tfont-size: 14px;\n\t}\n\n\ttr {\n\t\ttransition: background 0.2s ease-in;\n\t}\n\n\ttbody tr:nth-of-type(odd) {\n\t\tbackground-color: rgba(0, 0, 0, 0.02);\n\t}\n\n\ttbody tr:nth-of-type(odd):hover {\n\t\tbackground: rgba(226, 110, 64, 0.1) !important;\n\t}\n\n\ttbody tr:hover {\n\t\tcursor: pointer;\n\t\tbackground: rgba(226, 110, 64, 0.1) !important;\n\t}\n`;\n\ntype Props = {\n\tlastBlockIndexIncreaseHook: (index: number) => any;\n};\n\nconst Blocks: React.FC<Props> = props => {\n\tconst blocksPerPage = 50;\n\n\t// component scoped node\n\tconst n = new Monet(config.host, config.port);\n\n\tconst [loadMore, setLoadMore] = useState(false);\n\n\tconst [lastFetchedBlockIndex, setLastFetchedBlockIndex] = useState(0);\n\tconst [blocks, setBlocks] = useState<IBabbleBlock[]>([]);\n\n\tconst fetchBlocks = async () => {\n\t\tif (lastFetchedBlockIndex === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get last block index\n\t\tconst i = await n.getInfo<MonetInfo>();\n\t\tconst l = lastFetchedBlockIndex || parseInt(i.last_block_index, 10);\n\n\t\t// callback\n\t\tif (!lastFetchedBlockIndex) {\n\t\t\tprops.lastBlockIndexIncreaseHook(parseInt(i.last_block_index, 10));\n\t\t}\n\n\t\t// Fetch blocks\n\t\tlet count = blocksPerPage;\n\t\tlet start = l - blocksPerPage;\n\n\t\tif (l < blocksPerPage) {\n\t\t\tcount = l;\n\t\t\tstart = 0;\n\t\t}\n\n\t\tconst bks = await n.consensus!.getBlocks(start, count);\n\n\t\t// set states\n\t\tsetLastFetchedBlockIndex(start || -1);\n\t\tsetBlocks([...blocks, ...bks.reverse()]);\n\t};\n\n\tuseEffect(() => {\n\t\tfetchBlocks();\n\n\t\tconst table = document.getElementById('blocksTable');\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tif (\n\t\t\t\twindow.scrollY + window.innerHeight >=\n\t\t\t\ttable!.clientHeight + table!.offsetTop\n\t\t\t) {\n\t\t\t\tsetLoadMore(true);\n\t\t\t}\n\t\t});\n\t\treturn () =>\n\t\t\twindow.removeEventListener('scroll', () => {\n\t\t\t\t// pass\n\t\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (loadMore) {\n\t\t\tfetchBlocks();\n\t\t}\n\n\t\tsetLoadMore(false);\n\t}, [loadMore]);\n\n\t// Polling\n\tlet poller: any;\n\n\tconst fetchNewBlocks = async () => {\n\t\tconst info = await n.getInfo<MonetInfo>();\n\n\t\tconst nowLastBlockIndex = Number(info.last_block_index);\n\t\tconst lastBlockIndex = blocks[0].Body.Index;\n\n\t\tif (nowLastBlockIndex > lastBlockIndex) {\n\t\t\t// callback\n\t\t\tprops.lastBlockIndexIncreaseHook(nowLastBlockIndex);\n\n\t\t\tconst newBlocks = await n.consensus!.getBlocks(\n\t\t\t\tlastBlockIndex + 1,\n\t\t\t\tnowLastBlockIndex - lastBlockIndex - 1\n\t\t\t);\n\n\t\t\tconst all = [...newBlocks.reverse(), ...blocks];\n\n\t\t\tsetBlocks(all);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tpoller = setInterval(() => {\n\t\t\tfetchNewBlocks().then(() => console.log('(5s) Fetching Blocks...'));\n\t\t}, 5000);\n\n\t\treturn () => clearInterval(poller);\n\t});\n\n\t// Select block\n\tconst [selectedBlock, setSelectedBlock] = useState<IBabbleBlock>(\n\t\t{} as IBabbleBlock\n\t);\n\tconst [show, setShow] = useState(false);\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\tconst onBlockClickBind = (block: IBabbleBlock) => (e: any) => {\n\t\tsetSelectedBlock(block);\n\t\thandleShow();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{Object.keys(selectedBlock).length > 0 && (\n\t\t\t\t<Modal\n\t\t\t\t\tsize={'lg'}\n\t\t\t\t\tcentered={true}\n\t\t\t\t\tshow={show}\n\t\t\t\t\tonHide={handleClose}\n\t\t\t\t>\n\t\t\t\t\t<Modal.Header closeButton={true}>\n\t\t\t\t\t\t<Modal.Title>\n\t\t\t\t\t\t\tBlock {selectedBlock.Body.Index}\n\t\t\t\t\t\t</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t<Block block={selectedBlock} />\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t\t<STable\n\t\t\t\tid=\"blocksTable\"\n\t\t\t\tbordered={false}\n\t\t\t\tresponsive={true}\n\t\t\t\tstriped={true}\n\t\t\t\tcellPadding={'1px'}\n\t\t\t>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t<th># of Txs</th>\n\t\t\t\t\t\t<th># of Sigs</th>\n\t\t\t\t\t\t<th className=\"d-none d-lg-table-cell\">State Hash</th>\n\t\t\t\t\t\t<th className=\"d-none d-lg-table-cell\">Peers Hash</th>\n\t\t\t\t\t\t<th className=\"d-none d-lg-table-cell\">\n\t\t\t\t\t\t\tRound Received\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{blocks.map(bl => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Spring\n\t\t\t\t\t\t\t\tfrom={{ opacity: 0 }}\n\t\t\t\t\t\t\t\tto={{ opacity: 1 }}\n\t\t\t\t\t\t\t\tkey={bl.Body.Index + 'y'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{style => (\n\t\t\t\t\t\t\t\t\t<tr\n\t\t\t\t\t\t\t\t\t\tstyle={style}\n\t\t\t\t\t\t\t\t\t\tonClick={onBlockClickBind(bl)}\n\t\t\t\t\t\t\t\t\t\tkey={bl.Body.Index + 'x'}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<td>{bl.Body.Index}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{bl.Body.Transactions.length}</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t{Object.keys(bl.Signatures).length}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td className=\"d-none d-lg-table-cell\">\n\t\t\t\t\t\t\t\t\t\t\t{bl.Body.StateHash}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td className=\"d-none d-lg-table-cell\">\n\t\t\t\t\t\t\t\t\t\t\t{bl.Body.PeersHash}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td className=\"d-none d-lg-table-cell\">\n\t\t\t\t\t\t\t\t\t\t\t{bl.Body.RoundReceived}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Spring>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</STable>\n\t\t</>\n\t);\n};\n\nexport default Blocks;\n","import React, { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport Badge from 'react-bootstrap/Badge';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Row from 'react-bootstrap/Row';\n\nimport BlocksTable from '../components/Blocks';\n\nimport Promo from '../assets/promo.svg';\n\nconst SBadge = styled(Badge)`\n\tfont-size: 12px !important;\n\tmargin-left: 10px;\n`;\n\nconst SBox = styled.div`\n\tbackground: #fff;\n\tmargin-bottom: 20px;\n`;\n\nconst Blocks: React.FC<{}> = () => {\n\tconst [lastBlockIndex, setLastBlockIndex] = useState(0);\n\n\treturn (\n\t\t<>\n\t\t\t<Jumbotron>\n\t\t\t\t<Container fluid={true}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={10}>\n\t\t\t\t\t\t\t<h1>Block Explorer</h1>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tCamille testnet was released late September\n\t\t\t\t\t\t\t\t2019.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<h2>Blocks</h2>\n\t\t\t\t\t\t\t<h3>{lastBlockIndex || '---'}</h3>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Jumbotron>\n\t\t\t<Row noGutters={true}>\n\t\t\t\t<Col>\n\t\t\t\t\t<SBox>\n\t\t\t\t\t\t<Container fluid={true}>\n\t\t\t\t\t\t\t<BlocksTable\n\t\t\t\t\t\t\t\tlastBlockIndexIncreaseHook={setLastBlockIndex}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</SBox>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t);\n};\n\nexport default Blocks;\n","import { IContractABI } from 'evm-lite-client';\nimport {\n\tContract,\n\tIAbstractSchema,\n\tITransaction,\n\tTransaction\n} from 'evm-lite-core';\n\nimport utils from 'evm-lite-utils';\n\nimport { GAS, GASPRICE, monet } from './monet';\n\ninterface ISchema extends IAbstractSchema {\n\tcheckAuthorised(tx: ITransaction, address: string): Transaction;\n\tsubmitNominee(\n\t\ttx: ITransaction,\n\t\taddress: string,\n\t\tmoniker: string\n\t): Transaction;\n\tcastNomineeVote(\n\t\ttx: ITransaction,\n\t\taddress: string,\n\t\tverdict: boolean\n\t): Transaction;\n\tgetCurrentNomineeVotes(tx: ITransaction, address: string): Transaction;\n\tgetWhiteListCount(tx: ITransaction): Transaction;\n\tgetWhiteListAddressFromIdx(tx: ITransaction, id: number): Transaction;\n\tgetMoniker(tx: ITransaction, address: string): Transaction;\n\tgetNomineeCount(tx: ITransaction): Transaction;\n\tgetNomineeAddressFromIdx(tx: ITransaction, id: number): Transaction;\n\tisNominee(tx: ITransaction, address: string): Transaction;\n}\n\nexport type WhitelistEntry = {\n\taddress: string;\n\tmoniker: string;\n};\n\nexport type NomineeEntry = {\n\taddress: string;\n\tmoniker: string;\n\tupVotes: number;\n\tdownVotes: number;\n};\n\nclass POA {\n\tprivate readonly contract: Contract<ISchema>;\n\n\tconstructor(address: string, abi: IContractABI) {\n\t\tthis.contract = Contract.load(abi, address);\n\t}\n\n\tpublic async whitelist(): Promise<WhitelistEntry[]> {\n\t\tconst countTx = this.contract.methods.getWhiteListCount({\n\t\t\tgas: GAS,\n\t\t\tgasPrice: GASPRICE\n\t\t});\n\n\t\tconst countRes: any = await monet.callTx(countTx);\n\t\tconst count = countRes.toNumber();\n\n\t\tif (!count) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst entries: WhitelistEntry[] = [];\n\n\t\tfor (const i of Array.from(Array(count).keys())) {\n\t\t\tconst entry: WhitelistEntry = {\n\t\t\t\taddress: '',\n\t\t\t\tmoniker: ''\n\t\t\t};\n\n\t\t\tconst addressTx = this.contract.methods.getWhiteListAddressFromIdx(\n\t\t\t\t{\n\t\t\t\t\tgas: GAS,\n\t\t\t\t\tgasPrice: GASPRICE\n\t\t\t\t},\n\t\t\t\ti\n\t\t\t);\n\n\t\t\tentry.address = await monet.callTx(addressTx);\n\n\t\t\tconst monikerTx = this.contract.methods.getMoniker(\n\t\t\t\t{\n\t\t\t\t\tgas: GAS,\n\t\t\t\t\tgasPrice: GASPRICE\n\t\t\t\t},\n\t\t\t\tentry.address\n\t\t\t);\n\n\t\t\tconst hex = await monet.callTx<string>(monikerTx);\n\t\t\tentry.moniker = utils.hexToString(hex);\n\n\t\t\tentries.push(entry);\n\t\t}\n\n\t\treturn entries;\n\t}\n\n\tpublic async nominees(): Promise<NomineeEntry[]> {\n\t\tconst countTx = this.contract.methods.getNomineeCount({\n\t\t\tgas: GAS,\n\t\t\tgasPrice: GASPRICE\n\t\t});\n\n\t\tconst countRes: any = await monet.callTx(countTx);\n\t\tconst count = countRes.toNumber();\n\n\t\tif (!count) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst entries: NomineeEntry[] = [];\n\t\tfor (const i of Array.from(Array(count).keys())) {\n\t\t\tconst entry: NomineeEntry = {\n\t\t\t\taddress: '',\n\t\t\t\tmoniker: '',\n\t\t\t\tupVotes: 0,\n\t\t\t\tdownVotes: 0\n\t\t\t};\n\n\t\t\tconst addressTx = this.contract.methods.getNomineeAddressFromIdx(\n\t\t\t\t{\n\t\t\t\t\tgas: GAS,\n\t\t\t\t\tgasPrice: GASPRICE\n\t\t\t\t},\n\t\t\t\ti\n\t\t\t);\n\n\t\t\tentry.address = await monet.callTx(addressTx);\n\n\t\t\tconst monikerTx = this.contract.methods.getMoniker(\n\t\t\t\t{\n\t\t\t\t\tgas: GAS,\n\t\t\t\t\tgasPrice: GASPRICE\n\t\t\t\t},\n\t\t\t\tentry.address\n\t\t\t);\n\n\t\t\tconst hex = await monet.callTx<string>(monikerTx);\n\t\t\tentry.moniker = utils.hexToString(hex);\n\n\t\t\tconst votesTx = this.contract.methods.getCurrentNomineeVotes(\n\t\t\t\t{\n\t\t\t\t\tgas: GAS,\n\t\t\t\t\tgasPrice: GASPRICE\n\t\t\t\t},\n\t\t\t\tutils.cleanAddress(entry.address)\n\t\t\t);\n\n\t\t\tconst votes = await monet.callTx<[string, string]>(votesTx);\n\n\t\t\tentry.upVotes = parseInt(votes[0], 10);\n\t\t\tentry.downVotes = parseInt(votes[1], 10);\n\n\t\t\tentries.push(entry);\n\t\t}\n\n\t\treturn entries;\n\t}\n}\n\nexport default POA;\n","import React, { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport Table from 'react-bootstrap/Table';\n\nimport { monet } from '../monet';\n\nimport POA, { NomineeEntry } from '../poa';\n\nconst STable = styled(Table)`\n\ttd {\n\t\tfont-family: 'Fira Code', monospace;\n\t\tfont-size: 14px;\n\t}\n\n\ttbody tr:nth-of-type(odd) {\n\t\tbackground-color: rgba(0, 0, 0, 0.02);\n\t}\n`;\n\nconst Nominees: React.FC<{}> = () => {\n\tconst [nominees, setNominees] = useState<NomineeEntry[]>([]);\n\n\tconst fetchNominees = async () => {\n\t\tconst poaData = await monet.getPOA();\n\t\tconst poa = new POA(poaData.address, JSON.parse(poaData.abi));\n\n\t\tconst n = await poa.nominees();\n\n\t\tsetNominees(nominees);\n\t};\n\n\tuseEffect(() => {\n\t\tfetchNominees();\n\t});\n\n\t// Polling\n\tlet poller: any;\n\n\tuseEffect(() => {\n\t\tpoller = setInterval(() => {\n\t\t\tfetchNominees().then(() =>\n\t\t\t\tconsole.log('(60s) Fetching Nominees...')\n\t\t\t);\n\t\t}, 60000);\n\n\t\treturn () => clearInterval(poller);\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<STable\n\t\t\t\tid=\"blocksTable\"\n\t\t\t\tbordered={false}\n\t\t\t\tresponsive={true}\n\t\t\t\tstriped={true}\n\t\t\t\tcellPadding={'1px'}\n\t\t\t>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Moniker</th>\n\t\t\t\t\t\t<th>Address</th>\n\t\t\t\t\t\t<th>Up Votes</th>\n\t\t\t\t\t\t<th>Down Votes</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{nominees.map(n => (\n\t\t\t\t\t\t<tr key={n.address}>\n\t\t\t\t\t\t\t<td>{n.moniker}</td>\n\t\t\t\t\t\t\t<td>{n.address}</td>\n\t\t\t\t\t\t\t<td>{n.upVotes}</td>\n\t\t\t\t\t\t\t<td>{n.downVotes}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</STable>\n\t\t</>\n\t);\n};\n\nexport default Nominees;\n","import React, { useEffect, useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport Table from 'react-bootstrap/Table';\n\nimport { monet } from '../monet';\n\nimport POA, { WhitelistEntry } from '../poa';\n\nconst STable = styled(Table)`\n\ttd {\n\t\tfont-family: 'Fira Code', monospace;\n\t\tfont-size: 14px;\n\t}\n\n\ttbody tr:nth-of-type(odd) {\n\t\tbackground-color: rgba(0, 0, 0, 0.02);\n\t}\n`;\n\nconst Whitelist: React.FC<{}> = () => {\n\tconst [whitelist, setWhitelist] = useState<WhitelistEntry[]>([]);\n\n\tconst fetchWhitelist = async () => {\n\t\tconst poaData = await monet.getPOA();\n\t\tconst poa = new POA(poaData.address, JSON.parse(poaData.abi));\n\n\t\tconst wl = await poa.whitelist();\n\n\t\tsetWhitelist(wl);\n\t};\n\n\tuseEffect(() => {\n\t\tfetchWhitelist();\n\t});\n\n\t// Polling\n\tlet poller: any;\n\n\tuseEffect(() => {\n\t\tpoller = setInterval(() => {\n\t\t\tfetchWhitelist().then(() =>\n\t\t\t\tconsole.log('(60s) Fetching Whitelist...')\n\t\t\t);\n\t\t}, 60000);\n\n\t\treturn () => clearInterval(poller);\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<STable\n\t\t\t\tid=\"blocksTable\"\n\t\t\t\tbordered={false}\n\t\t\t\tresponsive={true}\n\t\t\t\tstriped={true}\n\t\t\t\tcellPadding={'1px'}\n\t\t\t>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Moniker</th>\n\t\t\t\t\t\t<th>Address</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{whitelist.map(wle => (\n\t\t\t\t\t\t<tr key={wle.address}>\n\t\t\t\t\t\t\t<td>{wle.moniker}</td>\n\t\t\t\t\t\t\t<td>{wle.address}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</STable>\n\t\t</>\n\t);\n};\n\nexport default Whitelist;\n","import React, { useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport { IBabblePeer } from 'evm-lite-consensus';\n\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Row from 'react-bootstrap/Row';\n\nimport Nominees from '../components/Nominees';\nimport Peers from '../components/Peers';\nimport Whitelist from '../components/Whitelist';\n\nconst SContent = styled.div`\n\tmargin-top: 30px;\n`;\n\nconst SBox = styled.div`\n\tbackground: #fff;\n`;\n\nconst SHeading = styled.div`\n\tbackground: rgba(31, 66, 146, 0.9) !important;\n\tpadding: 11px 13px;\n\tfont-size: 13px;\n\tcolor: #fff !important;\n\ttext-transform: uppercase;\n\tfont-weight: bold;\n\n\t& span {\n\t\tpadding-left: 15px;\n\t\tfont-size: 11px;\n\t}\n`;\n\nconst Index: React.FC<{}> = () => {\n\tconst [peers, setPeers] = useState<any>([]);\n\n\tconst onPeerChange = (ps: IBabblePeer[]) => {\n\t\tsetPeers(ps);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Jumbotron>\n\t\t\t\t<Container fluid={true}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={10}>\n\t\t\t\t\t\t\t<h1>Network Statistics</h1>\n\t\t\t\t\t\t\t<p>Camille test network statistics.</p>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<h2>Peers</h2>\n\t\t\t\t\t\t\t<h3>{peers.length || '---'}</h3>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</Jumbotron>\n\t\t\t<br />\n\t\t\t<Container fluid={true}>\n\t\t\t\t<SHeading>Validators</SHeading>\n\t\t\t\t<SBox>\n\t\t\t\t\t<Peers onPeersChangeHook={onPeerChange} />\n\t\t\t\t</SBox>\n\t\t\t</Container>\n\n\t\t\t<SContent>\n\t\t\t\t<Container fluid={true}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<SHeading>Whitelist</SHeading>\n\t\t\t\t\t\t\t<SBox>\n\t\t\t\t\t\t\t\t<Whitelist />\n\t\t\t\t\t\t\t</SBox>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<SHeading>Nominees</SHeading>\n\t\t\t\t\t\t\t<SBox>\n\t\t\t\t\t\t\t\t<Nominees />\n\t\t\t\t\t\t\t</SBox>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</SContent>\n\t\t</>\n\t);\n};\n\nexport default Index;\n","import React, { useEffect, useState } from 'react';\n\nimport utils from 'evm-lite-utils';\nimport styled from 'styled-components';\n\nimport { IEVMAccount } from 'evm-lite-core';\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport monet from '../monet';\n\nconst SSearch = styled.div`\n\tmargin-top: 30px;\n\n\tspan {\n\t\tcolor: rgba(0, 0, 0, 0.6);\n\t}\n`;\n\nconst SSuggestion = styled.div`\n\tmargin: 10px;\n\tpadding: 20px;\n\tbackground: #fff;\n\twidth: 100%;\n\tborder: 1px solid #eee;\n`;\n\ntype ReactRouterProps = {\n\tdata: string;\n};\n\nconst Search: React.FC<RouteComponentProps<ReactRouterProps>> = props => {\n\tconst data = props.match.params.data;\n\n\tconst [account, setAccount] = useState<IEVMAccount>({} as IEVMAccount);\n\tconst [error, setError] = useState('');\n\n\tconst fetchDataResponses = async () => {\n\t\tif (utils.cleanAddress(data).length === 42) {\n\t\t\tconst a = await monet.getAccount(utils.cleanAddress(data));\n\n\t\t\tsetAccount(a);\n\t\t} else {\n\t\t\tsetError(\n\t\t\t\t'Search param not recognized. Currently only addresses are supported.'\n\t\t\t);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tfetchDataResponses();\n\t}, []);\n\n\treturn (\n\t\t<SSearch>\n\t\t\t<Container fluid={true}>\n\t\t\t\t<h1>\n\t\t\t\t\tSearch: <span>{props.match.params.data}</span>\n\t\t\t\t</h1>\n\t\t\t</Container>\n\t\t\t{error && <SSuggestion>{error}</SSuggestion>}\n\t\t\t{Object.keys(account).length > 0 && (\n\t\t\t\t<SSuggestion>\n\t\t\t\t\t<Container fluid={true}>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<h3>Balance: </h3>\n\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\t<span>{account.balance.format('T')}</span>\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<h3>Nonce: </h3>\n\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\t<span>{account.nonce}</span>\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<h3>Bytecode: </h3>\n\t\t\t\t\t\t\t\t<pre>\n\t\t\t\t\t\t\t\t\t<code>{account.bytecode}</code>\n\t\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t</SSuggestion>\n\t\t\t)}\n\t\t</SSearch>\n\t);\n};\n\nexport default Search;\n","import React from 'react';\n\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Wrapper from '../components/Wrapper';\n\nimport Blocks from '../containers/Blocks';\nimport Network from '../containers/Network';\nimport Search from '../containers/Search';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Wrapper>\n\t\t\t\t<Route exact={true} path=\"/\" component={Network} />\n\t\t\t\t<Route exact={true} path=\"/blocks\" component={Blocks} />\n\t\t\t\t<Route exact={true} path=\"/search/:data\" component={Search} />\n\t\t\t</Wrapper>\n\t\t</BrowserRouter>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ninterface IConfig {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: IConfig) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: IConfig) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: IConfig) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nconst app = <App />;\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}